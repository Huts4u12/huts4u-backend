{"version":3,"file":"static/js/315.01eddc90.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Person.js","pages/Home Section/HotelCardCarousel.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');","import { LocationOn, Person } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Rating,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Slider from \"react-slick\";\r\nimport color from \"../../components/color\";\r\nimport { CustomNextArrow, useScreenSize } from \"../../components/style\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  getAllHotels,\r\n  getMyAllHotelswithBelongsTo,\r\n} from \"../../services/services\";\r\nimport dayjs from \"dayjs\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst HotelCardCarousel = () => {\r\n  const { isBelow400px } = useScreenSize();\r\n  const [mergedData, setMergedData] = useState<any[]>([]);\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1,\r\n    // prevArrow: <CustomPrevArrow />,\r\n    nextArrow: <CustomNextArrow />,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 2,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchHotelsWithRooms = async () => {\r\n      try {\r\n        const hotelPayload = {\r\n          data: { filter: \"\", status: \"Approved\" },\r\n          page: 0,\r\n          pageSize: 50,\r\n          order: [[\"createdAt\", \"ASC\"]],\r\n        };\r\n        const hotelRes = await getAllHotels(hotelPayload);\r\n        console.log(hotelRes)\r\n        const hotelData = hotelRes?.data?.data?.rows || [];\r\n        const hotelIds = hotelData.map((hotel: any) => hotel.id);\r\n\r\n        let mergedData = [];\r\n        for (const hotelId of hotelIds) {\r\n          const belongsToPayload = {\r\n            id: hotelId,\r\n            secondTable: \"Room\",\r\n          };\r\n\r\n          const hotelWithRoomsRes = await getMyAllHotelswithBelongsTo(\r\n            belongsToPayload\r\n          );\r\n          const hotelWithRooms = hotelWithRoomsRes?.data || null;\r\n\r\n          if (hotelWithRooms) {\r\n            mergedData.push(hotelWithRooms?.data?.[0]);\r\n          }\r\n        }\r\n\r\n        const sortedHotels = mergedData\r\n          .sort((a, b) => b.ratings.rating - a.ratings.rating)\r\n          .slice(0, 10);\r\n\r\n        setMergedData(sortedHotels);\r\n      } catch (error) {\r\n        console.error(\"Error fetching hotels with rooms:\", error);\r\n      }\r\n    };\r\n\r\n    fetchHotelsWithRooms();\r\n  }, []);\r\n  console.log(mergedData)\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = (hotel: any) => {\r\n    const searchData = {\r\n      bookingType: hotel.rooms[0].stayType.toLowerCase(),\r\n      time: dayjs().format(\"HH:mm\"),\r\n      checkinDate: dayjs(),\r\n      checkOutDate: dayjs(),\r\n      rooms: 1,\r\n      adults: 2,\r\n      children: 0,\r\n    };\r\n    const queryParams = new URLSearchParams();\r\n\r\n    Object.entries(searchData).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null) {\r\n        queryParams.append(key, String(value));\r\n      }\r\n    });\r\n\r\n    navigate(`/hotel/${hotel.id}?${queryParams.toString()}`, {\r\n      state: { hotelData: hotel },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Slider {...settings}>\r\n      {mergedData.map((hotel: any, index: number) => (\r\n        <Box p={2} key={hotel.id} display={\"flex\"} alignItems={\"center\"}>\r\n          <Card\r\n            onClick={() => handleClick(hotel)}\r\n            sx={{\r\n              width: isBelow400px ? \"300px\" : \"320px\",\r\n              // mx: \"auto\",\r\n              boxShadow: \"none\",\r\n              borderRadius: \"12px\",\r\n              border: \"solid 3px\",\r\n              borderColor: color.firstColor,\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <Typography\r\n              sx={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                right: 0,\r\n                px: 1.5,\r\n                background: color.background,\r\n                color: \"white\",\r\n                borderRadius: \"0px 0px 0px 12px\",\r\n                fontSize: \"14px\",\r\n\r\n                pb: 0.3,\r\n              }}\r\n            >\r\n              Featured\r\n            </Typography>\r\n\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"200\"\r\n              image={hotel.propertyImages[0]}\r\n              alt={hotel.propertyName}\r\n            />\r\n            <CardContent>\r\n              <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                <Rating value={hotel.ratings.rating} precision={0.1} readOnly />\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"16px\",\r\n\r\n                    color: color.secondColor,\r\n                    ml: 1,\r\n                  }}\r\n                >\r\n                  {hotel.ratings.rating}\r\n                </Typography>\r\n              </Box>\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"CustomFontB\",\r\n                  mb: 0.5,\r\n                }}\r\n                variant=\"h6\"\r\n              >\r\n                {hotel.propertyName}\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                ₹\r\n                {(\r\n                  (\r\n                    hotel?.rooms?.[0] &&\r\n                    [\r\n                      {\r\n                        rate: hotel.rooms[0].rateFor3Hour,\r\n                        label: \"per 3 hour\",\r\n                      },\r\n                      {\r\n                        rate: hotel.rooms[0].rateFor6Hour,\r\n                        label: \"per 6 hour\",\r\n                      },\r\n                      {\r\n                        rate: hotel.rooms[0].rateFor12Hour,\r\n                        label: \"per 12 hour\",\r\n                      },\r\n                      {\r\n                        rate: hotel.rooms[0].rateFor1Night,\r\n                        label: \"per night\",\r\n                      },\r\n                    ].find((item) => item.rate > 0)\r\n                  )?.rate * 1.1\r\n                ).toFixed(2)}{\" \"}\r\n                <span style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                  {\r\n                    (\r\n                      hotel?.rooms?.[0] &&\r\n                      [\r\n                        {\r\n                          rate: hotel.rooms[0].rateFor3Hour,\r\n                          label: \"per 3 hour\",\r\n                        },\r\n                        {\r\n                          rate: hotel.rooms[0].rateFor6Hour,\r\n                          label: \"per 6 hour\",\r\n                        },\r\n                        {\r\n                          rate: hotel.rooms[0].rateFor12Hour,\r\n                          label: \"per 12 hour\",\r\n                        },\r\n                        {\r\n                          rate: hotel.rooms[0].rateFor1Night,\r\n                          label: \"per night\",\r\n                        },\r\n                      ].find((item) => item.rate > 0)\r\n                    )?.label\r\n                  }\r\n                </span>\r\n              </Typography>\r\n\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                sx={{\r\n                  background: color.background,\r\n                  mt: 1.5,\r\n                  p: 1,\r\n                  py: 1.5,\r\n                  borderRadius: \"12px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"12px\",\r\n                    color: \"white\",\r\n                    px: 2,\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {/* {hotel.rating} */}\r\n                  <LocationOn\r\n                    style={{ fontSize: \"18px\", paddingRight: \"4px\" }}\r\n                  />{\" \"}\r\n                  {hotel.city}\r\n                </Typography>\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"12px\",\r\n\r\n                    color: \"white\",\r\n                    px: 2,\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Person style={{ fontSize: \"18px\", paddingRight: \"4px\" }} />{\" \"}\r\n                  {hotel.rooms[0].standardRoomOccupancy}\r\n                </Typography>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      ))}\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default HotelCardCarousel;\r\n"],"names":["createSvgIcon","_jsx","d","HotelCardCarousel","isBelow400px","useScreenSize","mergedData","setMergedData","useState","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","CustomNextArrow","responsive","breakpoint","useEffect","async","_hotelRes$data","_hotelRes$data$data","hotelPayload","data","filter","status","page","pageSize","order","hotelRes","getAllHotels","console","log","hotelIds","rows","map","hotel","id","hotelId","belongsToPayload","secondTable","hotelWithRoomsRes","getMyAllHotelswithBelongsTo","hotelWithRooms","_hotelWithRooms$data","push","sortedHotels","sort","a","b","ratings","rating","slice","error","fetchHotelsWithRooms","navigate","useNavigate","Slider","children","index","_ref2","_hotel$rooms","_ref3","_hotel$rooms2","Box","p","display","alignItems","_jsxs","Card","onClick","searchData","bookingType","rooms","stayType","toLowerCase","time","dayjs","format","checkinDate","checkOutDate","adults","queryParams","URLSearchParams","Object","entries","forEach","_ref","key","value","undefined","append","String","toString","state","hotelData","handleClick","sx","width","boxShadow","borderRadius","border","borderColor","color","firstColor","position","Typography","top","right","px","background","fontSize","pb","CardMedia","component","height","image","propertyImages","alt","propertyName","CardContent","mb","Rating","precision","readOnly","secondColor","ml","fontFamily","variant","rate","rateFor3Hour","label","rateFor6Hour","rateFor12Hour","rateFor1Night","find","item","toFixed","style","fontWeight","justifyContent","mt","py","LocationOn","paddingRight","city","Person","standardRoomOccupancy"],"sourceRoot":""}